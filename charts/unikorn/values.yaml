# Set the global container repo.
repository: ghcr.io

# Set the global container repo organization.
organization: eschercloudai

# Set the global container tag.
# Defaults to the chart revision, which should be in lock-step with the
# actual release.
# tag:

# Set the docker configuration, doing so will create a secret and link it
# to the service accounts of all the controllers.  You can do something like:
# --set dockerConfig=$(cat ~/.docker/config.json | base64 -w0)
dockerConfig:

# Set the image pull secret on the service accounts of all the controllers.
# This is an alternative to dockerConfigs, but unlikely to play ball with
# ArgoCD as it's a foreign object that needs pruning.
imagePullSecret:

# Project manager specific configuration.
projectManager:
  # Allows override of the global default image.
  image:

# Control plane manager specific configuration.
controlPlaneManager:
  # Allows override of the global default image.
  image:

# Cluster manager specific configuration.
clusterManager:
  # Allows override of the global default image.
  image:

# REST server specific configuration.
server:
  # Temporarily block deployment until it's complete.
  enabled: false

  # Allows override of the global default image.
  image:

  ingress:
    # Sets the ingress class to use.
    ingressClass: nginx

    annotations: {}

    # Sets the DNS hosts/X.509 Certs.
    host: kubernetes.eschercloud.com

  # Sets the OTLP endpoint for shipping spans.
  # otlpEndpoint: jaeger-collector.default:4318

  # Allow configuration of application credentials.
  applicationCredentials:
    # Sets the roles to grant to credentials.  It is up to the Openstack administrator
    # to ensure users have these roles so they can grant them to the credential.
    roles:
    - _member_
    - member
    - load-balancer_member

# UI that works with the server.
ui:
  # Temporarily block deployment until it's complete.
  enabled: false

# Defines Prometheus monitoring integration.
monitoring:
  # Enable monitoring, ensure Prometheus is installed first to define the CRDs.
  enabled: false

  # Set the namespace to generate the service monitor into.
  namespace: monitoring

  # Define service monitor configuration.
  serviceMonitor:

    # Labels required to be selected by Prometheus, this is compatible with
    # kube-prometheus defaults.
    labels:
      release: prometheus
