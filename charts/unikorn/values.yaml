# Set the global container repo.
repository: ghcr.io

# Set the global container repo organization.
organization: eschercloudai

# Set the global container tag.
tag: 0.1.0

# Set the docker configuration, doing so will create a secret and link it
# to the service accounts of all the controllers.  You can do something like:
# --set dockerConfig=$(cat ~/.docker/config.json | base64 -d)
dockerConfig:

# Set the image pull secret on the service accounts of all the controllers.
# This is an alternative to dockerConfigs, but unlikely to play ball with
# ArgoCD as it's a foreign object that needs pruning.
imagePullSecrets:

# Project manager specific configuration.
projectManager:
  # Allows override of the global default image.
  image:

# Control plane manager specific configuration.
controlPlaneManager:
  # Allows override of the global default image.
  image:

# Cluster manager specific configuration.
clusterManager:
  # Allows override of the global default image.
  image:

# Defines Prometheus monitoring integration.
monitoring:
  # Enable monitoring, ensure Prometheus is installed first to define the CRDs.
  enabled: false

  # Set the namespace to generate the service monitor into.
  namespace: monitoring

  # Define service monitor configuration.
  serviceMonitor:

    # Labels required to be selected by Prometheus, this is compatible with
    # kube-prometheus defaults.
    labels:
      release: prometheus
