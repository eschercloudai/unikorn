---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  name: controlplanes.unikorn.eschercloud.ai
spec:
  group: unikorn.eschercloud.ai
  names:
    categories:
    - unikorn
    kind: ControlPlane
    listKind: ControlPlaneList
    plural: controlplanes
    singular: controlplane
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.applicationBundle
      name: bundle
      type: string
    - jsonPath: .status.namespace
      name: namespace
      type: string
    - jsonPath: .status.conditions[?(@.type=="Available")].reason
      name: status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ControlPlane is an abstraction around resource provisioning,
          for example it may contain a provider like Cluster API that can provision
          KubernetesCluster resources.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ControlPlaneSpec defines any control plane specific options.
            properties:
              applicationBundle:
                description: ApplicationBundle defines the applications used to create
                  the control plane. Change this to a new bundle to start an upgrade.
                type: string
              applicationBundleAutoUpgrade:
                description: ApplicationBundleAutoUpgrade enables automatic upgrade
                  of application bundles. When no properties are set in the specification,
                  the platform will automatically choose an upgrade time for your
                  resource.  This will be before a working day (Mon-Fri) and before
                  working hours (00:00-07:00 UTC).  When any property is set the platform
                  will follow the rules for the upgrade method.
                properties:
                  weekday:
                    description: WeekDay allows specification of upgrade time windows
                      on individual days of the week.  The platform will select a
                      random  upgrade slot within the specified time windows in order
                      to load balance and mitigate against defects.
                    properties:
                      friday:
                        description: Friday, when specified, provides an upgrade window
                          on that day.
                        properties:
                          end:
                            description: End is the upgrade window end hour in UTC.
                            maximum: 23
                            minimum: 0
                            type: integer
                          start:
                            description: Start is the upgrade window start hour in
                              UTC.  Upgrades will be deterministically scheduled between
                              start and end to balance load across the platform.  Windows
                              can span days, so start=22 and end=07 will start at
                              22:00 on the selected day, and end 07:00 the following
                              one.
                            maximum: 23
                            minimum: 0
                            type: integer
                        required:
                        - end
                        - start
                        type: object
                      monday:
                        description: Monday, when specified, provides an upgrade window
                          on that day.
                        properties:
                          end:
                            description: End is the upgrade window end hour in UTC.
                            maximum: 23
                            minimum: 0
                            type: integer
                          start:
                            description: Start is the upgrade window start hour in
                              UTC.  Upgrades will be deterministically scheduled between
                              start and end to balance load across the platform.  Windows
                              can span days, so start=22 and end=07 will start at
                              22:00 on the selected day, and end 07:00 the following
                              one.
                            maximum: 23
                            minimum: 0
                            type: integer
                        required:
                        - end
                        - start
                        type: object
                      saturday:
                        description: Saturday, when specified, provides an upgrade
                          window on that day.
                        properties:
                          end:
                            description: End is the upgrade window end hour in UTC.
                            maximum: 23
                            minimum: 0
                            type: integer
                          start:
                            description: Start is the upgrade window start hour in
                              UTC.  Upgrades will be deterministically scheduled between
                              start and end to balance load across the platform.  Windows
                              can span days, so start=22 and end=07 will start at
                              22:00 on the selected day, and end 07:00 the following
                              one.
                            maximum: 23
                            minimum: 0
                            type: integer
                        required:
                        - end
                        - start
                        type: object
                      sunday:
                        description: Sunday, when specified, provides an upgrade window
                          on that day.
                        properties:
                          end:
                            description: End is the upgrade window end hour in UTC.
                            maximum: 23
                            minimum: 0
                            type: integer
                          start:
                            description: Start is the upgrade window start hour in
                              UTC.  Upgrades will be deterministically scheduled between
                              start and end to balance load across the platform.  Windows
                              can span days, so start=22 and end=07 will start at
                              22:00 on the selected day, and end 07:00 the following
                              one.
                            maximum: 23
                            minimum: 0
                            type: integer
                        required:
                        - end
                        - start
                        type: object
                      thursday:
                        description: Thursday, when specified, provides an upgrade
                          window on that day.
                        properties:
                          end:
                            description: End is the upgrade window end hour in UTC.
                            maximum: 23
                            minimum: 0
                            type: integer
                          start:
                            description: Start is the upgrade window start hour in
                              UTC.  Upgrades will be deterministically scheduled between
                              start and end to balance load across the platform.  Windows
                              can span days, so start=22 and end=07 will start at
                              22:00 on the selected day, and end 07:00 the following
                              one.
                            maximum: 23
                            minimum: 0
                            type: integer
                        required:
                        - end
                        - start
                        type: object
                      tuesday:
                        description: Tuesday, when specified, provides an upgrade
                          window on that day.
                        properties:
                          end:
                            description: End is the upgrade window end hour in UTC.
                            maximum: 23
                            minimum: 0
                            type: integer
                          start:
                            description: Start is the upgrade window start hour in
                              UTC.  Upgrades will be deterministically scheduled between
                              start and end to balance load across the platform.  Windows
                              can span days, so start=22 and end=07 will start at
                              22:00 on the selected day, and end 07:00 the following
                              one.
                            maximum: 23
                            minimum: 0
                            type: integer
                        required:
                        - end
                        - start
                        type: object
                      wednesday:
                        description: Wednesday, when specified, provides an upgrade
                          window on that day.
                        properties:
                          end:
                            description: End is the upgrade window end hour in UTC.
                            maximum: 23
                            minimum: 0
                            type: integer
                          start:
                            description: Start is the upgrade window start hour in
                              UTC.  Upgrades will be deterministically scheduled between
                              start and end to balance load across the platform.  Windows
                              can span days, so start=22 and end=07 will start at
                              22:00 on the selected day, and end 07:00 the following
                              one.
                            maximum: 23
                            minimum: 0
                            type: integer
                        required:
                        - end
                        - start
                        type: object
                    type: object
                type: object
              timeout:
                default: 10m
                description: Timeout defines how long a control plane is allowed to
                  provision for before a timeout is triggerd and the request aborts.
                type: string
            required:
            - applicationBundle
            type: object
          status:
            description: ControlPlaneStatus defines the status of the project.
            properties:
              conditions:
                description: Current service state of a control plane.
                items:
                  description: Condition is a generic condition type for use across
                    all resource types. It's generic so that the underlying controller-manager
                    functionality can be shared across all resources.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      enum:
                      - Provisioning
                      - Provisioned
                      - Cancelled
                      - Errored
                      - Deprovisioning
                      - Deprovisioned
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      enum:
                      - Available
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              namespace:
                description: Namespace defines the namespace a control plane resides
                  in.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
