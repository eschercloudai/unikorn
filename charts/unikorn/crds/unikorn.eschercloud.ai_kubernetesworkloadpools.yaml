---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: kubernetesworkloadpools.unikorn.eschercloud.ai
spec:
  group: unikorn.eschercloud.ai
  names:
    categories:
    - all
    - unikorn
    kind: KubernetesWorkloadPool
    listKind: KubernetesWorkloadPoolList
    plural: kubernetesworkloadpools
    singular: kubernetesworkloadpool
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.labels.unikorn\.eschercloud\.ai/cluster
      name: Cluster
      type: string
    - jsonPath: .spec.version
      name: version
      type: string
    - jsonPath: .spec.image
      name: image
      type: string
    - jsonPath: .spec.flavor
      name: flavor
      type: string
    - jsonPath: .spec.replicas
      name: replicas
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KubernetesWorkloadPoolSpec defines the requested machine
              pool state.
            properties:
              autoscaling:
                description: Autoscaling contains optional sclaing limits and scheduling
                  hints for autoscaling.
                properties:
                  maximumReplicas:
                    description: MaximumReplicas defines the maximum numer of replicas
                      that this pool can be scaled up to.
                    minimum: 1
                    type: integer
                  minimumReplicas:
                    description: MinimumReplicas defines the minimum number of replicas
                      that this pool can be scaled down to.
                    minimum: 0
                    type: integer
                  scheduler:
                    description: Scheduler is required when scale-from-zero support
                      is requested i.e. MimumumReplicas is 0.  This provides scheduling
                      hints to the autoscaler as it cannot derive CPU/memory constraints
                      from the machine flavor.
                    properties:
                      cpu:
                        description: CPU defines the number of CPUs for the pool flavor.
                        minimum: 1
                        type: integer
                      gpu:
                        description: GPU needs to be set when the pool contains GPU
                          resources so the autoscaler can make informed choices when
                          scaling up.
                        properties:
                          count:
                            description: Count is the number of GPUs for the pool
                              flavor.
                            minimum: 1
                            type: integer
                          type:
                            description: Type is the type of GPU.
                            enum:
                            - nvidia.com/gpu
                            type: string
                        required:
                        - count
                        - type
                        type: object
                      memory:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Memory defines the amount of memory for the pool
                          flavor. Internally this will be rounded down to the nearest
                          Gi.
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    required:
                    - cpu
                    - memory
                    type: object
                required:
                - maximumReplicas
                - minimumReplicas
                type: object
              diskSize:
                anyOf:
                - type: integer
                - type: string
                description: DiskSize is the persistent root disk size to deploy with.  This
                  overrides the default ephemeral disk size defined in the flavor.
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              failureDomain:
                description: FailureDomain is the failure domain to use for the pool.
                type: string
              files:
                description: Files are a set of files that can be installed onto the
                  node on initialisation/join.
                items:
                  description: File is a file that can be deployed to a cluster node
                    on creation.
                  properties:
                    content:
                      description: Content is the file contents.
                      format: byte
                      type: string
                    path:
                      description: Path is the absolute path to create the file in.
                      type: string
                  required:
                  - content
                  - path
                  type: object
                type: array
              flavor:
                description: Flavor is the OpenStack Nova flavor to deploy with.
                type: string
              image:
                description: Image is the OpenStack Glance image to deploy with.
                type: string
              labels:
                additionalProperties:
                  type: string
                description: Labels is the set of node labels to apply to the pool
                  on initialisation/join.
                type: object
              name:
                description: Name allows overriding the pool name.  Workload pool
                  resources in the same namespace need unique names, but may apply
                  to different clusters which exist in their own "namespace".
                type: string
              replicas:
                default: 3
                description: Replicas is the initial pool size to deploy.
                minimum: 0
                type: integer
              version:
                description: Version is the Kubernetes version to install.  For performance
                  reasons this should match what is already pre-installed on the provided
                  image.
                pattern: ^v(?:[0-9]+\.){2}(?:[0-9]+)$
                type: string
            required:
            - flavor
            - image
            - version
            type: object
          status:
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
