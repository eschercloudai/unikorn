---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: kubernetesclusters.unikorn.eschercloud.ai
spec:
  group: unikorn.eschercloud.ai
  names:
    categories:
    - all
    - unikorn
    kind: KubernetesCluster
    listKind: KubernetesClusterList
    plural: kubernetesclusters
    singular: kubernetescluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.controlPlane.version
      name: version
      type: string
    - jsonPath: .spec.controlPlane.image
      name: image
      type: string
    - jsonPath: .spec.controlPlane.flavor
      name: flavor
      type: string
    - jsonPath: .spec.controlPlane.replicas
      name: replicas
      type: string
    - jsonPath: .status.conditions[?(@.type=="Available")].reason
      name: status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KubernetesCluster is an object representing a Kubernetes cluster.
          For now, this is a monolith for simplicity.  In future it may reference
          a provider specific implementation e.g. if CAPI goes out of favour for some
          other new starlet.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KubernetesClusterSpec defines the requested state of the
              Kubernetes cluster.
            properties:
              api:
                description: API defines Kubernetes API specific options.
                properties:
                  allowedPrefixes:
                    description: AllowedPrefixes is a list of all IPv4 prefixes that
                      are allowed to access the API.
                    items:
                      pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\/(?:3[0-2]|[1-2]?[0-9])$
                      type: string
                    type: array
                  subjectAlternativeNames:
                    description: SubjectAlternativeNames is a list of X.509 SANs to
                      add to the API certificate.
                    items:
                      type: string
                    type: array
                type: object
              applicationBundle:
                default: kubernetes-cluster-1.0.0
                description: 'ApplicationBundle defines the applications used to create
                  the cluster. Change this to a new bundle to start an upgrade. TODO:
                  delete the default.'
                type: string
              controlPlane:
                description: ControlPlane defines the control plane topology.
                properties:
                  diskSize:
                    anyOf:
                    - type: integer
                    - type: string
                    description: DiskSize is the persistent root disk size to deploy
                      with.  This overrides the default ephemeral disk size defined
                      in the flavor.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  flavor:
                    description: Flavor is the OpenStack Nova flavor to deploy with.
                    type: string
                  image:
                    description: Image is the OpenStack Glance image to deploy with.
                    type: string
                  replicas:
                    default: 3
                    description: Replicas is the initial pool size to deploy.
                    minimum: 0
                    type: integer
                  version:
                    description: Version is the Kubernetes version to install.  For
                      performance reasons this should match what is already pre-installed
                      on the provided image.
                    pattern: ^v(?:[0-9]+\.){2}(?:[0-9]+)$
                    type: string
                  volumeFailureDomain:
                    description: VolumeFailureDomain allows the volume failure domain
                      to be set on a per machine deployment basis.
                    type: string
                required:
                - flavor
                - image
                - version
                type: object
              features:
                description: Features defines add-on features that can be enabled
                  for the cluster.
                properties:
                  autoscaling:
                    description: Autoscaling , if true, provisions a cluster autoscaler
                      and allows workload pools to specify autoscaling configuration.
                    type: boolean
                type: object
              network:
                description: Network defines the Kubernetes networking.
                properties:
                  dnsNameservers:
                    description: DNSNameservers sets the DNS nameservers for pods.
                      At present due to some technical challenges, this must contain
                      only one DNS server.
                    items:
                      pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])$
                      type: string
                    minItems: 1
                    type: array
                    x-kubernetes-list-type: set
                  nodeNetwork:
                    description: NodeNetwork is the IPv4 prefix for the node network.
                    pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\/(?:3[0-2]|[1-2]?[0-9])$
                    type: string
                  podNetwork:
                    description: PodNetwork is the IPv4 prefix for the pod network.
                    pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\/(?:3[0-2]|[1-2]?[0-9])$
                    type: string
                  serviceNetwork:
                    description: ServiceNetwork is the IPv4 prefix for the service
                      network.
                    pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\/(?:3[0-2]|[1-2]?[0-9])$
                    type: string
                required:
                - dnsNameservers
                - nodeNetwork
                - podNetwork
                - serviceNetwork
                type: object
              openstack:
                description: Openstack defines global Openstack related configuration.
                properties:
                  caCert:
                    description: CACert is the CA used to trust the Openstack endpoint.
                    format: byte
                    type: string
                  cloud:
                    description: Cloud is the clouds.yaml key that identifes the configuration
                      to use for provisioning.
                    type: string
                  cloudConfig:
                    description: CloudConfig is a base64 encoded minimal clouds.yaml
                      file for use by the ControlPlane to provision the IaaS bits.
                    format: byte
                    type: string
                  externalNetworkId:
                    description: ExternalNetworkID is the Openstack external network
                      ID.
                    type: string
                  failureDomain:
                    description: FailureDomain is the global failure domain to use.  The
                      control plane will always be deployed in this region.  Individual
                      worload pools will default to this, but can override it.
                    type: string
                  sshKeyName:
                    description: SSHKeyName is the SSH key name to use to provide
                      access to the VMs.
                    type: string
                  volumeFailureDomain:
                    description: VolumeFailureDomain is the default failure domain
                      to use for volumes as these needn't match compute.  For legacy
                      reasons, this will default to FailureDomain, but you shouldn't
                      reply on this behaviour.
                    type: string
                required:
                - caCert
                - cloud
                - cloudConfig
                - externalNetworkId
                - failureDomain
                type: object
              timeout:
                default: 20m
                description: Timeout is the maximum time to attempt to provision a
                  cluster before aborting.
                type: string
              workloadPools:
                description: WorkloadPools defines the workload cluster topology.
                properties:
                  pools:
                    description: Pools contains an inline set of pools.  This field
                      will be ignored when Selector is set.  Inline pools are expected
                      to be used for UI generated clusters.
                    items:
                      properties:
                        autoscaling:
                          description: Autoscaling contains optional sclaing limits
                            and scheduling hints for autoscaling.
                          properties:
                            maximumReplicas:
                              description: MaximumReplicas defines the maximum numer
                                of replicas that this pool can be scaled up to.
                              minimum: 1
                              type: integer
                            minimumReplicas:
                              description: MinimumReplicas defines the minimum number
                                of replicas that this pool can be scaled down to.
                              minimum: 0
                              type: integer
                            scheduler:
                              description: Scheduler is required when scale-from-zero
                                support is requested i.e. MimumumReplicas is 0.  This
                                provides scheduling hints to the autoscaler as it
                                cannot derive CPU/memory constraints from the machine
                                flavor.
                              properties:
                                cpu:
                                  description: CPU defines the number of CPUs for
                                    the pool flavor.
                                  minimum: 1
                                  type: integer
                                gpu:
                                  description: GPU needs to be set when the pool contains
                                    GPU resources so the autoscaler can make informed
                                    choices when scaling up.
                                  properties:
                                    count:
                                      description: Count is the number of GPUs for
                                        the pool flavor.
                                      minimum: 1
                                      type: integer
                                    type:
                                      description: Type is the type of GPU.
                                      enum:
                                      - nvidia.com/gpu
                                      type: string
                                  required:
                                  - count
                                  - type
                                  type: object
                                memory:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Memory defines the amount of memory
                                    for the pool flavor. Internally this will be rounded
                                    down to the nearest Gi.
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                              required:
                              - cpu
                              - memory
                              type: object
                          required:
                          - maximumReplicas
                          - minimumReplicas
                          type: object
                        diskSize:
                          anyOf:
                          - type: integer
                          - type: string
                          description: DiskSize is the persistent root disk size to
                            deploy with.  This overrides the default ephemeral disk
                            size defined in the flavor.
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        failureDomain:
                          description: FailureDomain is the failure domain to use
                            for the pool.
                          type: string
                        files:
                          description: Files are a set of files that can be installed
                            onto the node on initialisation/join.
                          items:
                            description: File is a file that can be deployed to a
                              cluster node on creation.
                            properties:
                              content:
                                description: Content is the file contents.
                                format: byte
                                type: string
                              path:
                                description: Path is the absolute path to create the
                                  file in.
                                type: string
                            required:
                            - content
                            - path
                            type: object
                          type: array
                        flavor:
                          description: Flavor is the OpenStack Nova flavor to deploy
                            with.
                          type: string
                        image:
                          description: Image is the OpenStack Glance image to deploy
                            with.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Labels is the set of node labels to apply to
                            the pool on initialisation/join.
                          type: object
                        name:
                          description: Name allows overriding the pool name.  Workload
                            pool resources in the same namespace need unique names,
                            but may apply to different clusters which exist in their
                            own "namespace".
                          type: string
                        replicas:
                          default: 3
                          description: Replicas is the initial pool size to deploy.
                          minimum: 0
                          type: integer
                        version:
                          description: Version is the Kubernetes version to install.  For
                            performance reasons this should match what is already
                            pre-installed on the provided image.
                          pattern: ^v(?:[0-9]+\.){2}(?:[0-9]+)$
                          type: string
                        volumeFailureDomain:
                          description: VolumeFailureDomain allows the volume failure
                            domain to be set on a per machine deployment basis.
                          type: string
                      required:
                      - flavor
                      - image
                      - name
                      - version
                      type: object
                    type: array
                  selector:
                    description: Selector is a label selector to collect KubernetesClusterWorkloadPool
                      resources.  If not specified Pools will be used exclusively.
                      Label selectors are expected to be used for CLI generated clusters.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                type: object
            required:
            - controlPlane
            - network
            - openstack
            - timeout
            - workloadPools
            type: object
          status:
            description: KubernetesClusterStatus defines the observed state of the
              Kubernetes cluster.
            properties:
              conditions:
                description: Current service state of a Kubernetes cluster.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      enum:
                      - Provisioning
                      - Provisioned
                      - Canceled
                      - Timedout
                      - Errored
                      - Deprovisioning
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      enum:
                      - Available
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              namespace:
                description: Namespace defines the namespace a cluster resides in.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
