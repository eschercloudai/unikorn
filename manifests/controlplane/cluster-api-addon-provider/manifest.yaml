apiVersion: v1
kind: Namespace
metadata:
  name: capi-addon-provider
---
# Source: cluster-api-addon-provider/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cluster-api-addon-provider
  namespace: capi-addon-provider
  labels: 
    helm.sh/chart: cluster-api-addon-provider-0.1.0-dev.0.main.21
    app.kubernetes.io/name: cluster-api-addon-provider
    app.kubernetes.io/instance: cluster-api-addon-provider
    app.kubernetes.io/version: "f1b6c2e"
    app.kubernetes.io/managed-by: Helm
---
# Source: cluster-api-addon-provider/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-api-addon-provider
  namespace: capi-addon-provider
  labels: 
    helm.sh/chart: cluster-api-addon-provider-0.1.0-dev.0.main.21
    app.kubernetes.io/name: cluster-api-addon-provider
    app.kubernetes.io/instance: cluster-api-addon-provider
    app.kubernetes.io/version: "f1b6c2e"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    !include "/etc/capi-addon-provider/defaults.yaml,/etc/capi-addon-provider/user-config.yaml"
  defaults.yaml: |
    easykubeFieldManager: cluster-api-addon-provider
  user-config.yaml: |
    {}
---
# Source: cluster-api-addon-provider/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-api-addon-provider
  labels: 
    helm.sh/chart: cluster-api-addon-provider-0.1.0-dev.0.main.21
    app.kubernetes.io/name: cluster-api-addon-provider
    app.kubernetes.io/instance: cluster-api-addon-provider
    app.kubernetes.io/version: "f1b6c2e"
    app.kubernetes.io/managed-by: Helm
rules:
  # Manipulating CRDs (only allow patching of our own CRDs)
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - get
      - watch
      - create
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    resourceNames:
      - helmreleases.addons.stackhpc.com
      - manifests.addons.stackhpc.com
    verbs:
      - update
      - patch
  # Required for kopf to watch resources properly
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - list
      - watch
  # Required for kopf to produce events properly
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
  # We can manipulate our own objects
  - apiGroups:
      - addons.stackhpc.com
    resources:
      - "*"
    verbs:
      - "*"
  # We need to be able to read Cluster API clusters
  - apiGroups:
      - cluster.x-k8s.io
    resources:
      - clusters
    verbs:
      - list
      - watch
      - get
  # We need to be able to watch infrastructure clusters
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - "*"
    verbs:
      - list
      - watch
      - get
  # We need to be able to read configmaps and secrets
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
    verbs:
      - list
      - watch
      - get
---
# Source: cluster-api-addon-provider/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-api-addon-provider
  labels: 
    helm.sh/chart: cluster-api-addon-provider-0.1.0-dev.0.main.21
    app.kubernetes.io/name: cluster-api-addon-provider
    app.kubernetes.io/instance: cluster-api-addon-provider
    app.kubernetes.io/version: "f1b6c2e"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    namespace: capi-addon-provider
    name: cluster-api-addon-provider
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-api-addon-provider
---
# Source: cluster-api-addon-provider/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-api-addon-provider
  namespace: capi-addon-provider
  labels: 
    helm.sh/chart: cluster-api-addon-provider-0.1.0-dev.0.main.21
    app.kubernetes.io/name: cluster-api-addon-provider
    app.kubernetes.io/instance: cluster-api-addon-provider
    app.kubernetes.io/version: "f1b6c2e"
    app.kubernetes.io/managed-by: Helm
spec:
  # Allow only one replica at once with the recreate strategy in order to avoid races
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels: 
      app.kubernetes.io/name: cluster-api-addon-provider
      app.kubernetes.io/instance: cluster-api-addon-provider
  template:
    metadata:
      labels: 
        app.kubernetes.io/name: cluster-api-addon-provider
        app.kubernetes.io/instance: cluster-api-addon-provider
      annotations:
        # Force the deployment to roll when the config changes
        addons.stackhpc.com/config-hash: b2ca99667140100d6624fe97c871bcd26ae0cc99c069937cae323f4f74a30e9c
    spec:
      serviceAccountName: cluster-api-addon-provider
      securityContext: 
        runAsNonRoot: true
      containers:
        - name: cluster-api-addon-provider
          image: "ghcr.io/stackhpc/cluster-api-addon-provider:f1b6c2e"
          imagePullPolicy: IfNotPresent
          securityContext: 
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          resources: 
            {}
          volumeMounts:
            - name: etc-capi-addon-provider
              mountPath: /etc/capi-addon-provider
              readOnly: true
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: etc-capi-addon-provider
          configMap:
            name: cluster-api-addon-provider
        # Mount a writable directory at /tmp
        - name: tmp
          emptyDir: {}
