// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package generated

import (
	"time"
)

const (
	HttpBasicAuthenticationScopes = "httpBasicAuthentication.Scopes"
	Oauth2AuthenticationScopes    = "oauth2Authentication.Scopes"
)

// Defines values for Oauth2ErrorError.
const (
	AccessDenied            Oauth2ErrorError = "access_denied"
	InvalidRequest          Oauth2ErrorError = "invalid_request"
	InvalidScope            Oauth2ErrorError = "invalid_scope"
	MethodNotAllowed        Oauth2ErrorError = "method_not_allowed"
	NotFound                Oauth2ErrorError = "not_found"
	ServerError             Oauth2ErrorError = "server_error"
	TemporarilyUnavailable  Oauth2ErrorError = "temporarily_unavailable"
	UnauthorizedClient      Oauth2ErrorError = "unauthorized_client"
	UnsupportedMediaType    Oauth2ErrorError = "unsupported_media_type"
	UnsupportedResponseType Oauth2ErrorError = "unsupported_response_type"
)

// ApplicationCredentialOptions Openstack application credential create options.
type ApplicationCredentialOptions struct {
	// Name Application credential name.
	Name string `json:"name"`
}

// ControlPlane A Unikorn control plane.
type ControlPlane struct {
	// Status A Kubernetes resource status.
	Status *KubernetesResourceStatus `json:"status,omitempty"`
}

// ControlPlanes A list of Unikorn control planes.
type ControlPlanes = []ControlPlane

// CreateControlPlane Unikorn control plane creation parameters.
type CreateControlPlane struct {
	// Name The name of the resource.
	Name string `json:"name"`
}

// Gpu GPU related autoscaling configuration.
type Gpu struct {
	// Count The number of GPUs.
	Count int `json:"count"`

	// Type The GPU type.
	Type string `json:"type"`
}

// KubernetesCluster Unikorn Kubernetes cluster creation parameters.
type KubernetesCluster struct {
	// Api Kubernetes API settings.
	Api *KubernetesClusterAPI `json:"api,omitempty"`

	// ControlPlane A Kubernetes cluster machine.
	ControlPlane OpenstackMachinePool `json:"controlPlane"`

	// Features A set of optional add on features for the cluster.
	Features *KubernetesClusterFeatures `json:"features,omitempty"`

	// Name Cluster name.
	Name string `json:"name"`

	// Network A kubernetes cluster network settings.
	Network KubernetesClusterNetwork `json:"network"`

	// Openstack Unikorn Kubernetes cluster creation Openstack parameters.
	Openstack KubernetesClusterOpenstack `json:"openstack"`

	// Status A Kubernetes resource status.
	Status *KubernetesResourceStatus `json:"status,omitempty"`

	// WorkloadPools A non-empty list of Kubernetes cluster workload pools.
	WorkloadPools KubernetesClusterWorkloadPools `json:"workloadPools"`
}

// KubernetesClusterAPI Kubernetes API settings.
type KubernetesClusterAPI struct {
	// AllowedPrefixes Set of address prefixes to allow access to the Kubernetes API.
	AllowedPrefixes *[]string `json:"allowedPrefixes,omitempty"`

	// SubjectAlternativeNames Set of non-standard X.509 SANs to add to the API certificate.
	SubjectAlternativeNames *[]string `json:"subjectAlternativeNames,omitempty"`
}

// KubernetesClusterAutoscaling A Kubernetes cluster workload pool autoscaling configuration.
type KubernetesClusterAutoscaling struct {
	// MaximumReplicas The maximum number of replicas to allow.
	MaximumReplicas int `json:"maximumReplicas"`

	// MinimumReplicas The minimum number of replicas to allow.
	MinimumReplicas int `json:"minimumReplicas"`

	// Scheduler Scheduling hints for scale-from-zero.
	Scheduler *KubernetesClusterAutoscalingScheduler `json:"scheduler,omitempty"`
}

// KubernetesClusterAutoscalingScheduler Scheduling hints for scale-from-zero.
type KubernetesClusterAutoscalingScheduler struct {
	// Cpus The number of CPUs defined for the workload pool flavor.
	Cpus int `json:"cpus"`

	// Gpu GPU related autoscaling configuration.
	Gpu *Gpu `json:"gpu,omitempty"`

	// Memory The amount of memory defind for the workload pool flavor in GiB.
	Memory int `json:"memory"`
}

// KubernetesClusterFeatures A set of optional add on features for the cluster.
type KubernetesClusterFeatures struct {
	// Autoscaling Enable auto-scaling
	Autoscaling *bool `json:"autoscaling,omitempty"`
}

// KubernetesClusterNetwork A kubernetes cluster network settings.
type KubernetesClusterNetwork struct {
	// DnsNameservers A list of DNS name server to use.
	DnsNameservers []string `json:"dnsNameservers"`

	// NodePrefix Network prefix to provision nodes in.
	NodePrefix string `json:"nodePrefix"`

	// PodPrefix Network prefix to provision pods in.
	PodPrefix string `json:"podPrefix"`

	// ServicePrefix Network prefix to provision services in.
	ServicePrefix string `json:"servicePrefix"`
}

// KubernetesClusterOpenstack Unikorn Kubernetes cluster creation Openstack parameters.
type KubernetesClusterOpenstack struct {
	// ApplicationCredentialID Application credential ID.
	ApplicationCredentialID *string `json:"applicationCredentialID,omitempty"`

	// ApplicationCredentialSecret Application credential secret.
	ApplicationCredentialSecret *string `json:"applicationCredentialSecret,omitempty"`

	// ComputeAvailabilityZone Compute availability zone for control plane, and workload pool default.
	ComputeAvailabilityZone string `json:"computeAvailabilityZone"`

	// ExternalNetworkID Openstack external network ID.
	ExternalNetworkID string `json:"externalNetworkID"`

	// SshKeyName Openstack SSH Key to install on all machines.
	SshKeyName *string `json:"sshKeyName,omitempty"`

	// VolumeAvailabilityZone Volume availability zone for control plane, and workload pool default.
	VolumeAvailabilityZone string `json:"volumeAvailabilityZone"`
}

// KubernetesClusterWorkloadPool A Kuberntes cluster workload pool.
type KubernetesClusterWorkloadPool struct {
	// Autoscaling A Kubernetes cluster workload pool autoscaling configuration.
	Autoscaling *KubernetesClusterAutoscaling `json:"autoscaling,omitempty"`

	// AvailabilityZone Workload pool availability zone.
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	// Labels Workload pool labels to apply on node creation.
	Labels *map[string]string `json:"labels,omitempty"`

	// Machine A Kubernetes cluster machine.
	Machine OpenstackMachinePool `json:"machine"`

	// Name Workload pool name.
	Name string `json:"name"`
}

// KubernetesClusterWorkloadPools A non-empty list of Kubernetes cluster workload pools.
type KubernetesClusterWorkloadPools = []KubernetesClusterWorkloadPool

// KubernetesClusters A list of Unikorn Kubernetes clusters.
type KubernetesClusters = []KubernetesCluster

// KubernetesResourceStatus A Kubernetes resource status.
type KubernetesResourceStatus struct {
	// CreationTime The time the resource was created.
	CreationTime time.Time `json:"creationTime"`

	// DeletionTime The time a control plane was deleted.
	DeletionTime *time.Time `json:"deletionTime,omitempty"`

	// Name The name of the resource.
	Name string `json:"name"`

	// Status The current status of the resource.
	Status string `json:"status"`
}

// Oauth2Error Generic error message.
type Oauth2Error struct {
	// Error A terse error string expaning on the HTTP error code.
	Error Oauth2ErrorError `json:"error"`

	// ErrorDescription Verbose message describing the error.
	ErrorDescription string `json:"error_description"`
}

// Oauth2ErrorError A terse error string expaning on the HTTP error code.
type Oauth2ErrorError string

// OpenstackApplicationCredential An Openstack application credential.
type OpenstackApplicationCredential struct {
	// Id Application credential ID.
	Id string `json:"id"`

	// Name Application credential name.
	Name string `json:"name"`

	// Secret Application credential secret, this is only present on creation.
	Secret *string `json:"secret,omitempty"`
}

// OpenstackAvailabilityZone An Openstack availability zone.
type OpenstackAvailabilityZone struct {
	// Name The availability zone name.
	Name string `json:"name"`
}

// OpenstackAvailabilityZones A list of Openstack availability zones.
type OpenstackAvailabilityZones = []OpenstackAvailabilityZone

// OpenstackExternalNetwork An Openstack external network.
type OpenstackExternalNetwork struct {
	// Id Openstack external network ID.
	Id string `json:"id"`

	// Name Opestack external network name.
	Name string `json:"name"`
}

// OpenstackExternalNetworks A list of Openstack external networks.
type OpenstackExternalNetworks = []OpenstackExternalNetwork

// OpenstackFlavor An Openstack flavor.
type OpenstackFlavor struct {
	Cpus int `json:"cpus"`

	// Gpus The number of GPUs, if not set there are none.
	Gpus *int `json:"gpus,omitempty"`

	// Id The unique flavor ID.
	Id string `json:"id"`

	// Memory The amount of memory in GiB.
	Memory int `json:"memory"`

	// Name The flavor name.
	Name string `json:"name"`
}

// OpenstackFlavors A list of Openstack flavors.
type OpenstackFlavors = []OpenstackFlavor

// OpenstackImage And Openstack image.
type OpenstackImage struct {
	// Created Time when the image was created.
	Created time.Time `json:"created"`

	// Id The unique image ID.
	Id string `json:"id"`

	// Modified Time when the image was last modified.
	Modified time.Time `json:"modified"`

	// Name The image name.
	Name string `json:"name"`

	// Versions Image version metadata.
	Versions struct {
		// Kubernetes The kubernetes semantic version.
		Kubernetes string `json:"kubernetes"`

		// NvidiaDriver The nvidia driver version.
		NvidiaDriver string `json:"nvidiaDriver"`
	} `json:"versions"`
}

// OpenstackImages A list of Openstack images that are compatible with this platform.
type OpenstackImages = []OpenstackImage

// OpenstackKeyPair An Openstack key pair.
type OpenstackKeyPair struct {
	// Name The key pair name.
	Name string `json:"name"`
}

// OpenstackKeyPairs A list of Openstack key pairs.
type OpenstackKeyPairs = []OpenstackKeyPair

// OpenstackMachinePool A Kubernetes cluster machine.
type OpenstackMachinePool struct {
	// Disk An Openstack volume.
	Disk *OpenstackVolume `json:"disk,omitempty"`

	// FlavorName Openstack flavor name.
	FlavorName string `json:"flavorName"`

	// ImageName Openstack image name.
	ImageName string `json:"imageName"`

	// Replicas Number of machines.
	Replicas int `json:"replicas"`

	// Version Kubernetes version.
	Version string `json:"version"`
}

// OpenstackProject An Openstack project.
type OpenstackProject struct {
	// Description A verbose description of the project.
	Description *string `json:"description,omitempty"`

	// Id Globally unique project ID.
	Id string `json:"id"`

	// Name The name of the project within the scope of the domain.
	Name string `json:"name"`
}

// OpenstackProjects A list of Openstack projects.
type OpenstackProjects = []OpenstackProject

// OpenstackVolume An Openstack volume.
type OpenstackVolume struct {
	// AvailabilityZone Volume availability zone.
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	// Size Disk size in GiB.
	Size int `json:"size"`
}

// Project A Unikorn project.
type Project struct {
	// Status A Kubernetes resource status.
	Status *KubernetesResourceStatus `json:"status,omitempty"`
}

// StringParameter A basic string parameter.
type StringParameter = string

// Token defines model for token.
type Token struct {
	// Email The user's email address.
	Email string `json:"email"`

	// Token Authentication token.
	Token string `json:"token"`
}

// TokenScope Password authentication scope.
type TokenScope struct {
	// Project Openstack project scoping.
	Project struct {
		// Id Openstack project ID.
		Id string `json:"id"`
	} `json:"project"`
}

// ApplicationCredentialParameter A basic string parameter.
type ApplicationCredentialParameter = StringParameter

// ClusterNameParameter A basic string parameter.
type ClusterNameParameter = StringParameter

// ControlPlaneNameParameter A basic string parameter.
type ControlPlaneNameParameter = StringParameter

// BadRequestResponse Generic error message.
type BadRequestResponse = Oauth2Error

// ControlPlaneResponse A Unikorn control plane.
type ControlPlaneResponse = ControlPlane

// ControlPlanesResponse A list of Unikorn control planes.
type ControlPlanesResponse = ControlPlanes

// InternalServerErrorResponse Generic error message.
type InternalServerErrorResponse = Oauth2Error

// KubernetesClusterResponse Unikorn Kubernetes cluster creation parameters.
type KubernetesClusterResponse = KubernetesCluster

// KubernetesClustersResponse A list of Unikorn Kubernetes clusters.
type KubernetesClustersResponse = KubernetesClusters

// NullResponse defines model for nullResponse.
type NullResponse = map[string]interface{}

// OpenstackApplicationCredentialResponse An Openstack application credential.
type OpenstackApplicationCredentialResponse = OpenstackApplicationCredential

// OpenstackBlockStorageAvailabilityZonesResponse A list of Openstack availability zones.
type OpenstackBlockStorageAvailabilityZonesResponse = OpenstackAvailabilityZones

// OpenstackComputeAvailabilityZonesResponse A list of Openstack availability zones.
type OpenstackComputeAvailabilityZonesResponse = OpenstackAvailabilityZones

// OpenstackExternalNetworksResponse A list of Openstack external networks.
type OpenstackExternalNetworksResponse = OpenstackExternalNetworks

// OpenstackFlavorsResponse A list of Openstack flavors.
type OpenstackFlavorsResponse = OpenstackFlavors

// OpenstackImagesResponse A list of Openstack images that are compatible with this platform.
type OpenstackImagesResponse = OpenstackImages

// OpenstackKeyPairsResponse A list of Openstack key pairs.
type OpenstackKeyPairsResponse = OpenstackKeyPairs

// OpenstackProjectsResponse A list of Openstack projects.
type OpenstackProjectsResponse = OpenstackProjects

// ProjectResponse A Unikorn project.
type ProjectResponse = Project

// TokenResponse defines model for tokenResponse.
type TokenResponse = Token

// UnauthorizedResponse Generic error message.
type UnauthorizedResponse = Oauth2Error

// ApplicationCredentialRequest Openstack application credential create options.
type ApplicationCredentialRequest = ApplicationCredentialOptions

// CreateControlPlaneRequest Unikorn control plane creation parameters.
type CreateControlPlaneRequest = CreateControlPlane

// CreateKubernetesClusterRequest Unikorn Kubernetes cluster creation parameters.
type CreateKubernetesClusterRequest = KubernetesCluster

// TokenScopeRequest Password authentication scope.
type TokenScopeRequest = TokenScope

// PostApiV1AuthTokensTokenJSONRequestBody defines body for PostApiV1AuthTokensToken for application/json ContentType.
type PostApiV1AuthTokensTokenJSONRequestBody = TokenScope

// PostApiV1ControlplanesJSONRequestBody defines body for PostApiV1Controlplanes for application/json ContentType.
type PostApiV1ControlplanesJSONRequestBody = CreateControlPlane

// PostApiV1ControlplanesControlPlaneNameClustersJSONRequestBody defines body for PostApiV1ControlplanesControlPlaneNameClusters for application/json ContentType.
type PostApiV1ControlplanesControlPlaneNameClustersJSONRequestBody = KubernetesCluster

// PostApiV1ProvidersOpenstackApplicationCredentialsJSONRequestBody defines body for PostApiV1ProvidersOpenstackApplicationCredentials for application/json ContentType.
type PostApiV1ProvidersOpenstackApplicationCredentialsJSONRequestBody = ApplicationCredentialOptions
