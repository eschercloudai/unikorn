// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package generated

import (
	"time"
)

const (
	HttpBasicAuthenticationScopes = "httpBasicAuthentication.Scopes"
	Oauth2AuthenticationScopes    = "oauth2Authentication.Scopes"
)

// Defines values for Oauth2ErrorError.
const (
	AccessDenied            Oauth2ErrorError = "access_denied"
	InvalidRequest          Oauth2ErrorError = "invalid_request"
	InvalidScope            Oauth2ErrorError = "invalid_scope"
	MethodNotAllowed        Oauth2ErrorError = "method_not_allowed"
	NotFound                Oauth2ErrorError = "not_found"
	ServerError             Oauth2ErrorError = "server_error"
	TemporarilyUnavailable  Oauth2ErrorError = "temporarily_unavailable"
	UnauthorizedClient      Oauth2ErrorError = "unauthorized_client"
	UnsupportedMediaType    Oauth2ErrorError = "unsupported_media_type"
	UnsupportedResponseType Oauth2ErrorError = "unsupported_response_type"
)

// Oauth2Error Generic error message.
type Oauth2Error struct {
	// Error A terse error string expaning on the HTTP error code.
	Error Oauth2ErrorError `json:"error"`

	// ErrorDescription Verbose message describing the error.
	ErrorDescription string `json:"error_description"`
}

// Oauth2ErrorError A terse error string expaning on the HTTP error code.
type Oauth2ErrorError string

// OpenstackAvailabilityZone An Openstack availability zone.
type OpenstackAvailabilityZone struct {
	// Name The availability zone name.
	Name string `json:"name"`
}

// OpenstackAvailabilityZones A list of Openstack availability zones.
type OpenstackAvailabilityZones = []OpenstackAvailabilityZone

// OpenstackExternalNetwork An Openstack external network.
type OpenstackExternalNetwork struct {
	// Id Openstack external network ID.
	Id string `json:"id"`

	// Name Opestack external network name.
	Name string `json:"name"`
}

// OpenstackExternalNetworks A list of Openstack external networks.
type OpenstackExternalNetworks = []OpenstackExternalNetwork

// OpenstackFlavor An Openstack flavor.
type OpenstackFlavor struct {
	Cpus int `json:"cpus"`

	// Gpus The number of GPUs, if not set there are none.
	Gpus *int `json:"gpus,omitempty"`

	// Id The unique flavor ID.
	Id string `json:"id"`

	// Memory The amount of memory in GiB.
	Memory int `json:"memory"`

	// Name The flavor name.
	Name string `json:"name"`
}

// OpenstackFlavors A list of Openstack flavors.
type OpenstackFlavors = []OpenstackFlavor

// OpenstackImage And Openstack image.
type OpenstackImage struct {
	// Created Time when the image was created.
	Created time.Time `json:"created"`

	// Id The unique image ID.
	Id string `json:"id"`

	// Modified Time when the image was last modified.
	Modified time.Time `json:"modified"`

	// Name The image name.
	Name string `json:"name"`

	// Versions Image version metadata.
	Versions struct {
		// Kubernetes The kubernetes semantic version.
		Kubernetes string `json:"kubernetes"`

		// NvidiaDriver The nvidia driver version.
		NvidiaDriver string `json:"nvidia_driver"`
	} `json:"versions"`
}

// OpenstackImages A list of Openstack images that are compatible with this platform.
type OpenstackImages = []OpenstackImage

// OpenstackKeyPair An Openstack key pair.
type OpenstackKeyPair struct {
	// Name The key pair name.
	Name string `json:"name"`
}

// OpenstackKeyPairs A list of Openstack key pairs.
type OpenstackKeyPairs = []OpenstackKeyPair

// OpenstackProject An Openstack project.
type OpenstackProject struct {
	// Description A verbose description of the project.
	Description *string `json:"description,omitempty"`

	// Id Globally unique project ID.
	Id string `json:"id"`

	// Name The name of the project within the scope of the domain.
	Name string `json:"name"`
}

// OpenstackProjects A list of Openstack projects.
type OpenstackProjects = []OpenstackProject

// Project A Unikorn project.
type Project struct {
	// CreationTime The time a project was created.
	CreationTime time.Time `json:"creation_time"`

	// DeletionTime The time a project was deleted.
	DeletionTime *time.Time `json:"deletion_time,omitempty"`

	// Name The project name.
	Name string `json:"name"`

	// Status The current status of the resource.
	Status string `json:"status"`
}

// StringParameter A basic string parameter.
type StringParameter = string

// Token defines model for token.
type Token struct {
	// Token Authentication token.
	Token string `json:"token"`
}

// TokenScope Password authentication scope.
type TokenScope struct {
	// Project Openstack project scoping.
	Project struct {
		// Id Openstack project ID.
		Id string `json:"id"`
	} `json:"project"`
}

// ClusterParameter A basic string parameter.
type ClusterParameter = StringParameter

// ControlPlaneParameter A basic string parameter.
type ControlPlaneParameter = StringParameter

// BadRequestResponse Generic error message.
type BadRequestResponse = Oauth2Error

// InternalServerErrorResponse Generic error message.
type InternalServerErrorResponse = Oauth2Error

// NullResponse defines model for nullResponse.
type NullResponse = map[string]interface{}

// OpenstackBlockStorageAvailabilityZonesResponse A list of Openstack availability zones.
type OpenstackBlockStorageAvailabilityZonesResponse = OpenstackAvailabilityZones

// OpenstackComputeAvailabilityZonesResponse A list of Openstack availability zones.
type OpenstackComputeAvailabilityZonesResponse = OpenstackAvailabilityZones

// OpenstackExternalNetworksResponse A list of Openstack external networks.
type OpenstackExternalNetworksResponse = OpenstackExternalNetworks

// OpenstackFlavorsResponse A list of Openstack flavors.
type OpenstackFlavorsResponse = OpenstackFlavors

// OpenstackImagesResponse A list of Openstack images that are compatible with this platform.
type OpenstackImagesResponse = OpenstackImages

// OpenstackKeyPairsResponse A list of Openstack key pairs.
type OpenstackKeyPairsResponse = OpenstackKeyPairs

// OpenstackProjectsResponse A list of Openstack projects.
type OpenstackProjectsResponse = OpenstackProjects

// ProjectResponse A Unikorn project.
type ProjectResponse = Project

// TokenResponse defines model for tokenResponse.
type TokenResponse = Token

// UnauthorizedResponse Generic error message.
type UnauthorizedResponse = Oauth2Error

// TokenScopeRequest Password authentication scope.
type TokenScopeRequest = TokenScope

// PostApiV1AuthTokensTokenJSONRequestBody defines body for PostApiV1AuthTokensToken for application/json ContentType.
type PostApiV1AuthTokensTokenJSONRequestBody = TokenScope
