// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
