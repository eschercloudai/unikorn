// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"3q696m2l4cRtDxeOtJoUemdptt11BqWCVFfyncE2z3imU2/QgObDKM3v9z6/i88+v7NxKSV5f8/XiskY",
	"adig0qDExsfaFfJhtd4PI3tDZnxUb5bllUzl4cKR96OyvJ/YEt+X0k6u9yJt5II2eu+Ppyi7pR1bHxlv",
	"c9KAzwk28e1/dYW8/K/a4r//O5VOaVhB/ExMVU2oLFGmkM2Btvdl4PjyJX4mny1n85n8wdFezuY/drS/",
	"d6iLA09D0eNdnOszqHra70eO9T9TyLIMZr1gwi9O3jzFLJUWv7zFh+SrbTNDdYFX5XJLQpgg97zHhPn2",
	"o43PIWZ6n6gqLnX4HNLAsDx9T5QOboK8654pgYFG6Kmyc4w0VZBLMchcw8pvEstv5QSVYKiM8psjNhgK",
	"dXGHBqDGdAxX3FzRT6Se16U/OOpdWxGDWVJp4FAHapoLbGZU6AgSygbmgiXcoPgQs4d3Dh+j1qfcDh01",
	"UnVsY2QuLKiy9o590umUUPiDay5skCHmRQq5QjGT+54p5of53I9S+Uep8Jo604BQctmIkHqF9ffexVQ1",
	"fqN5RG36QQX99+id+8vR+4+PEPwdSRqjvBAJc8OaYVVF5PdkQtDMCaHAzXXFQiqz4KFGgWpwsRVsv0Bc",
	"mRbeYA0tEP100bqFFKiIYGHfxxwGaU8w8Dt7oECHikJsaLGCUyJcC97gMVnEh89dDtzchgRUu81AYnMK",
	"MHFN/hFOe0oIUhCl0HIjEwcG4VUC09HUoD03LJ2vGCbi1m7A7xj5pH9v7cRl5Zv4M3n5vPPINjzHiqJB",
	"rH/a+lQJcAjamUhhhjPvHxiK4lgWUuMLA2MlbQsSihGxvTqQqFPCSlJHURBSGR3ZaWRbbhY056IlzBeA",
	"h3FAitLA1BCk3HI3LBtgG0Bu1XO/Eqf3arumHyPwGrni6lOxNmx/Z8oFpjOtucMtr+621Gj1n+t32mCm",
	"GS1ja1ea8p1pzwaGPu53J5b85Cr31bceq2O7qR+p+1oqzbYSWzS8SKVTO0a9h3F15jzdEZL7+UJXt1hV",
	"x8vXVTnzOpRKjZJatlroaTbTOg/PSqZMWvKoT7uz7+uMtLz/aVV6VVxePRH1u7bW14+jgk6gtqW97lMq",
	"nWJ9VqvIrGnjwa1ktNu1/U+pV5hpxaftvvEdDSbtpTKw6Pp2PXH6UJZLZZ08Oz36WCr2Os32/V355QU+",
	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
