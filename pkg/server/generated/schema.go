// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
