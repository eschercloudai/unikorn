// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"YZ3QwlK/f/7+fwEAAP//dw9LwCLRAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
