// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"70z6gXx8oQwsl/8PAAD//5WqSRT5MQAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
