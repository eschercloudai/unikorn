openapi: 3.0.3
info:
  title: Unikorn Server
  description: RESTful API service for Unikorn custom resources and UI.
  version: 0.2.0
paths:
  /api/v1/auth/tokens/password:
    description: Password based authentication services.
    post:
      x-no-body: true
      description: |-
        Authenticates against Openstack, and returns a signed and encrypted oauth2
        JWT.  This token has a claim that contains the Openstack authorization token.
        This token can be used to poll allowed Openstack projects and upgrade to a
        project scoped token.
      security:
      - httpBasicAuthentication: []
      responses:
        '200':
          $ref: '#/components/responses/tokenResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
  /api/v1/auth/tokens/token:
    description: Token based authentication services.
    post:
      description: |-
        Authenticates against OpenStack, and returns a signed and encrypted oauth2
        JWT.  This token has a claim that contains the Openstack authorization token.
        The Openstack authorization token is project scoped, so the JWT is granted
        the "project" scope, allowing more APIs to be accessed.
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/tokenScopeRequest'
      responses:
        '200':
          $ref: '#/components/responses/tokenResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
  /api/v1/project:
    description: Unikorn project services.
    get:
      description: |-
        Gets the Unikorn project associated with the authenticated user's
        OpenStack project.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/projectResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
    post:
      x-no-body: true
      description: |-
        Creates a new Unikorn project associated with the authenticated user's
        OpenStack project.
      security:
      - oauth2Authentication:
        - project
      responses:
        '202':
          $ref: '#/components/responses/acceptedResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '409':
          $ref: '#/components/responses/conflictResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
    delete:
      description: |-
        Deletes the Unikorn project associated with the authenticated user's
        OpenStack project.  This is a cascading operation and will delete all
        contained control planes and clusters.
      security:
      - oauth2Authentication:
        - project
      responses:
        '202':
          $ref: '#/components/responses/nullResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
  /api/v1/controlplanes:
    description: Unikorn control plane services.
    get:
      description: |-
        Lists all Unikorn control planes contained within the selected Unikorn
        project.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/controlPlanesResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
    post:
      description: |-
        Creates a new Unikorn control plane within the selected Unikorn project.
      security:
      - oauth2Authentication:
        - project
      requestBody:
        $ref: "#/components/requestBodies/createControlPlaneRequest"
      responses:
        '202':
          $ref: '#/components/responses/acceptedResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '409':
          $ref: '#/components/responses/conflictResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
  /api/v1/controlplanes/{controlPlaneName}:
    description: Unikorn control plane services.
    parameters:
    - $ref: '#/components/parameters/controlPlaneNameParameter'
    get:
      description: |-
        Gets a Unikorn control plane from within the selected Unikorn project.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/controlPlaneResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
    put:
      description: |-
        Updates a Unikorn control plane within the selected Unikorn project.
        This is typically used to modify software versions managed by the
        underlying continuous delivery platform.
      security:
      - oauth2Authentication:
        - project
      requestBody:
        $ref: "#/components/requestBodies/nullRequest"
      responses:
        '200':
          $ref: '#/components/responses/nullResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
    delete:
      description: |-
        Deletes a Unikorn control plane from within the selected Unikorn project.
        This is a cascading operation and will delete all contained clusters.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/nullResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
  /api/v1/controlplanes/{controlPlaneName}/clusters:
    description: Unikorn cluster services.
    parameters:
    - $ref: '#/components/parameters/controlPlaneNameParameter'
    get:
      description: |-
        List all Unikorn clusters within the selected Unikorn control plane.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/kubernetesClustersResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
    post:
      description: |-
        Create a new Unikorn cluster within the selected Unikorn control plane.
      security:
      - oauth2Authentication:
        - project
      requestBody:
        $ref: "#/components/requestBodies/createKubernetesClusterRequest"
      responses:
        '202':
          $ref: '#/components/responses/acceptedResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '409':
          $ref: '#/components/responses/conflictResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
  /api/v1/controlplanes/{controlPlaneName}/clusters/{clusterName}:
    description: Unikorn cluster services.
    parameters:
    - $ref: '#/components/parameters/controlPlaneNameParameter'
    - $ref: '#/components/parameters/clusterNameParameter'
    get:
      description: |-
        Get a Unikorn cluster from within the selected Unikorn control plane.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/kubernetesClusterResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
    put:
      description: |-
        Update a Unikorn cluster within the selected Unikorn control plane.
        This is used to modify cluster paramters e.g. Kubernetes versions or
        scaling (where automatic scaling is not employed), and to modify any
        software componenets deployed within the cluster by the underlying
        continuous deliver platform.
      security:
      - oauth2Authentication:
        - project
      requestBody:
        $ref: "#/components/requestBodies/nullRequest"
      responses:
        '200':
          $ref: '#/components/responses/nullResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
    delete:
      description: |-
        Delete a Unikorn cluster from within a Unikorn control plane.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/nullResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
  /api/v1/providers/openstack/projects:
    description: OpenStack identity project services.
    get:
      description: |-
        Lists all OpenStack projects that the authenticated user is a member of.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/openstackProjectsResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
  /api/v1/providers/openstack/application-credentials:
    post:
      description: |-
        Creates a new Openstack application credential scoped to the project.
      security:
      - oauth2Authentication:
        - project
      requestBody:
        $ref: '#/components/requestBodies/applicationCredentialRequest'
      responses:
        '200':
          $ref: '#/components/responses/openstackApplicationCredentialResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
  /api/v1/providers/openstack/application-credentials/{applicationCredential}:
    description: Openstack application credential services.
    parameters:
    - $ref: '#/components/parameters/applicationCredentialParameter'
    get:
      description: |-
        Get an Openstack application credential.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/openstackApplicationCredentialResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
    delete:
      description: |-
        Deletes an Openstack application credential scoped to the project.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/okResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
  /api/v1/providers/openstack/flavors:
    description: OpenStack compute flavor services.
    get:
      description: |-
        Lists all OpenStack compute flavors that the authenticated user has access
        to within the scope of the OpenStack project.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/openstackFlavorsResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
  /api/v1/providers/openstack/images:
    description: OpenStack compute image services.
    get:
      description: |-
        Lists all OpenStack compute images that the authenticated user has access
        to within the scope of the OpenStack project.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/openstackImagesResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
  /api/v1/providers/openstack/availability-zones/compute:
    description: OpenStack compute availability zone services.
    get:
      description: |-
        Lists all OpenStack compute availability zones the authenticated user has
        access to within the scope of the OpenStack project.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/openstackComputeAvailabilityZonesResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
  /api/v1/providers/openstack/availability-zones/block-storage:
    description: OpenStack block storage availability zone services.
    get:
      description: |-
        Lists all OpenStack volume availability zones the authenticated user has
        access to within the scope of the OpenStack project.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/openstackBlockStorageAvailabilityZonesResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
  /api/v1/providers/openstack/external-networks:
    description: OpenStack external network services.
    get:
      description: |-
        Lists all OpenStack external networks the authenticated user has access to
        within the scope of the OpenStack project.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/openstackExternalNetworksResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
  /api/v1/providers/openstack/key-pairs:
    description: OpenStack key pair services.
    get:
      description: |-
        Lists all OpenStack key pairs the authenticated user has access to within
        the scope of the OpenStack project.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/openstackKeyPairsResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
components:
  parameters:
    controlPlaneNameParameter:
      name: controlPlaneName
      in: path
      description: The Unikorn control plane name.
      required: true
      schema:
        $ref: '#/components/schemas/stringParameter'
    clusterNameParameter:
      name: clusterName
      in: path
      description: The Unikorn cluster name.
      required: true
      schema:
        $ref: '#/components/schemas/stringParameter'
    applicationCredentialParameter:
      name: applicationCredential
      in: path
      description: Openstack application credential name.
      required: true
      schema:
        $ref: '#/components/schemas/stringParameter'
  schemas:
    stringParameter:
      description: A basic string parameter.
      type: string
    oauth2Error:
      description: Generic error message.
      type: object
      required:
      - error
      - error_description
      properties:
        error:
          description: A terse error string expaning on the HTTP error code.
          type: string
          enum:
          # Defined by OAuth2
          - invalid_request
          - unauthorized_client
          - access_denied
          - unsupported_response_type
          - invalid_scope
          - server_error
          - temporarily_unavailable
          # Proprietary
          - not_found
          - method_not_allowed
          - unsupported_media_type
        error_description:
          description: Verbose message describing the error.
          type: string
    tokenScope:
      description: Password authentication scope.
      type: object
      required:
      - project
      properties:
        project:
          description: Openstack project scoping.
          type: object
          required:
          - id
          properties:
            id:
              description: Openstack project ID.
              type: string
          additionalProperties: false
    token:
      desctiption: Authentication token result.
      type: object
      required:
      - token
      properties:
        token:
          description: Authentication token.
          type: string
    project:
      description: A Unikorn project.
      type: object
      required:
      - name
      - creation-time
      - status
      properties:
        name:
          description: The name of the resource.
          type: string
        creation-time:
          description: The time the resource was created.
          type: string
          format: date-time
        deletion-time:
          description: The time the resource was deleted.
          type: string
          format: date-time
        status:
          description: The current status of the resource.
          type: string
    createControlPlane:
      description: Unikorn control plane creation parameters.
      type: object
      required:
      - name
      properties:
        name:
          description: The name of the resource.
          type: string
    controlPlane:
      description: A Unikorn control plane.
      type: object
      required:
      - name
      - creation-time
      - status
      properties:
        name:
          description: The name of the resource.
          type: string
        creation-time:
          description: The time the resource was created.
          type: string
          format: date-time
        deletion-time:
          description: The time a control plane was deleted.
          type: string
          format: date-time
        status:
          description: The current status of the resource.
          type: string
    controlPlanes:
      description: A list of Unikorn control planes.
      type: array
      items:
        $ref: '#/components/schemas/controlPlane'
    kubernetesClusterOpenstack:
      description: Unikorn Kubernetes cluster creation Openstack parameters.
      type: object
      required:
      - application-credential-id
      - application-credential-secret
      - compute-availability-zone
      - volume-availability-zone
      - external-network-id
      properties:
        application-credential-id:
          description: Application credential ID.
          type: string
          writeOnly: true
        application-credential-secret:
          description: Application credential secret.
          type: string
          writeOnly: true
        compute-availability-zone:
          description: Compute availability zone for control plane, and workload pool default.
          type: string
        volume-availability-zone:
          description: Volume availability zone for control plane, and workload pool default.
          type: string
        external-network-id:
          description: Openstack external network ID.
          type: string
        ssh-key-name:
          description: Openstack SSH Key to install on all machines.
          type: string
    kubernetesClusterNetwork:
      description: A kubernetes cluster network settings.
      required:
      - node-prefix
      - service-prefix
      - pod-prefix
      - dns-nameservers
      properties:
        node-prefix:
          description: Network prefix to provision nodes in.
          type: string
        service-prefix:
          description: Network prefix to provision services in.
          type: string
        pod-prefix:
          description: Network prefix to provision pods in.
          type: string
        dns-nameservers:
          description: A list of DNS name server to use.
          type: array
          items:
            description: A DNS nameserver address.
            type: string
    kubernetesClusterAPI:
      description: Kubernetes API settings.
      properties:
        subject-alternative-names:
          description: Set of non-standard X.509 SANs to add to the API certificate.
          type: array
          minItems: 1
          items:
            description: An X.509 SAN.
            type: string
        allowed-prefixes:
          description: Set of address prefixes to allow access to the Kubernetes API.
          type: array
          minItems: 1
          items:
            description: An IPv4 CIDR address prefix.
            type: string
    openstackVolume:
      description: An Openstack volume.
      type: object
      required:
      - size
      properties:
        size:
          description: Disk size in GiB.
          type: integer
        availability-zone:
          description: Volume availability zone.
          type: string
    openstackMachinePool:
      description: A Kubernetes cluster machine.
      type: object
      required:
      - replicas
      - version
      - image-name
      - flavor-name
      properties:
        replicas:
          description: Number of machines.
          type: integer
        version:
          description: Kubernetes version.
          type: string
        image-name:
          description: Openstack image name.
          type: string
        flavor-name:
          description: Openstack flavor name.
          type: string
        disk:
          $ref: '#/components/schemas/openstackVolume'
    gpu:
      description: GPU related autoscaling configuration.
      type: object
      required:
      - type
      - count
      properties:
        type:
          description: The GPU type.
          type: string
        count:
          description: The number of GPUs.
          type: integer
    kubernetesClusterAutoscalingScheduler:
      description: Scheduling hints for scale-from-zero.
      type: object
      required:
      - cpus
      - memory
      properties:
        cpus:
          description: The number of CPUs defined for the workload pool flavor.
          type: integer
        memory:
          description: The amount of memory defind for the workload pool flavor in GiB.
          type: integer
        gpu:
          $ref: '#/components/schemas/gpu'
    kubernetesClusterAutoscaling:
      description: A Kubernetes cluster workload pool autoscaling configuration.
      type: object
      required:
      - minimum-replicas
      - maximum-replicas
      properties:
        minimum-replicas:
          description: The minimum number of replicas to allow.
          type: integer
        maximum-replicas:
          description: The maximum number of replicas to allow.
          type: integer
        scheduler:
          $ref: '#/components/schemas/kubernetesClusterAutoscalingScheduler'
    kubernetesClusterWorkloadPool:
      description: A Kuberntes cluster workload pool.
      type: object
      required:
      - name
      - machine
      properties:
        name:
          description: Workload pool name.
          type: string
        machine:
          $ref: '#/components/schemas/openstackMachinePool'
        availability-zone:
          description: Workload pool availability zone.
          type: string
        labels:
          description: Workload pool labels to apply on node creation.
          type: object
          additionalProperties:
            description: A string value.
            type: string
        auto-scaling:
          $ref: '#/components/schemas/kubernetesClusterAutoscaling'
    kubernetesClusterWorkloadPools:
      description: A non-empty list of Kubernetes cluster workload pools.
      type: array
      minItems: 1
      items:
        $ref: '#/components/schemas/kubernetesClusterWorkloadPool'
    kubernetesClusterFeatures:
      description: A set of optional add on features for the cluster.
      properties:
        auto-scaling:
          description: Enable auto-scaling
          type: boolean
    kubernetesClusterStatus:
      description: A Unikorn Kubernetes cluster status.
      type: object
      required:
      - name
      - creation-time
      - status
      properties:
        name:
          description: The name of the resource.
          type: string
        creation-time:
          description: The time the resource was created.
          type: string
          format: date-time
        deletion-time:
          description: The time a control plane was deleted.
          type: string
          format: date-time
        status:
          description: The current status of the resource.
          type: string
    kubernetesCluster:
      description: Unikorn Kubernetes cluster creation parameters.
      type: object
      required:
      - name
      - openstack
      - network
      - control-plane
      - workload-pools
      properties:
        name:
          description: Cluster name.
          type: string
        openstack:
          $ref: '#/components/schemas/kubernetesClusterOpenstack'
        network:
          $ref: '#/components/schemas/kubernetesClusterNetwork'
        api:
          $ref: '#/components/schemas/kubernetesClusterAPI'
        control-plane:
          $ref: '#/components/schemas/openstackMachinePool'
        workload-pools:
          $ref: '#/components/schemas/kubernetesClusterWorkloadPools'
        features:
          $ref: '#/components/schemas/kubernetesClusterFeatures'
        status:
          $ref: '#/components/schemas/kubernetesClusterStatus'
    kubernetesClusters:
      description: A list of Unikorn Kubernetes clusters.
      type: array
      items:
        $ref: '#/components/schemas/kubernetesCluster'
    openstackProject:
      description: An Openstack project.
      type: object
      required:
      - id
      - name
      properties:
        id:
          description: Globally unique project ID.
          type: string
        name:
          description: The name of the project within the scope of the domain.
          type: string
        description:
          description: A verbose description of the project.
          type: string
    openstackProjects:
      description: A list of Openstack projects.
      type: array
      items:
        $ref: '#/components/schemas/openstackProject'
    applicationCredentialOptions:
      description: Openstack application credential create options.
      type: object
      required:
      - name
      properties:
        name:
          description: Application credential name.
          type: string
    openstackApplicationCredential:
      description: An Openstack application credential.
      type: object
      required:
      - id
      - name
      properties:
        id:
          description: Application credential ID.
          type: string
        name:
          description: Application credential name.
          type: string
        secret:
          description: Application credential secret, this is only present on creation.
          type: string
    openstackImage:
      description: And Openstack image.
      type: object
      required:
      - id
      - name
      - created
      - modified
      - versions
      properties:
        id:
          description: The unique image ID.
          type: string
        name:
          description: The image name.
          type: string
        created:
          description: Time when the image was created.
          type: string
          format: date-time
        modified:
          description: Time when the image was last modified.
          type: string
          format: date-time
        versions:
          description: Image version metadata.
          type: object
          required:
          - kubernetes
          - nvidia-driver
          properties:
            kubernetes:
              description: The kubernetes semantic version.
              type: string
            nvidia-driver:
              description: The nvidia driver version.
              type: string
    openstackImages:
      description: A list of Openstack images that are compatible with this platform.
      type: array
      items:
        $ref: '#/components/schemas/openstackImage'
    openstackFlavor:
      description: An Openstack flavor.
      type: object
      required:
      - id
      - name
      - cpus
      - memory
      properties:
        id:
          description: The unique flavor ID.
          type: string
        name:
          description: The flavor name.
          type: string
        cpus:
          descritpion: The number of CPUs.
          type: integer
        memory:
          description: The amount of memory in GiB.
          type: integer
        gpus:
          description: The number of GPUs, if not set there are none.
          type: integer
    openstackFlavors:
      description: A list of Openstack flavors.
      type: array
      items:
        $ref: '#/components/schemas/openstackFlavor'
    openstackExternalNetwork:
      description: An Openstack external network.
      type: object
      required:
      - id
      - name
      properties:
        id:
          description: Openstack external network ID.
          type: string
        name:
          description: Opestack external network name.
          type: string
    openstackExternalNetworks:
      description: A list of Openstack external networks.
      type: array
      items:
        $ref: '#/components/schemas/openstackExternalNetwork'
    openstackKeyPair:
      description: An Openstack key pair.
      type: object
      required:
      - name
      properties:
        name:
          description: The key pair name.
          type: string
    openstackKeyPairs:
      description: A list of Openstack key pairs.
      type: array
      items:
        $ref: '#/components/schemas/openstackKeyPair'
    openstackAvailabilityZone:
      description: An Openstack availability zone.
      type: object
      required:
      - name
      properties:
        name:
          description: The availability zone name.
          type: string
    openstackAvailabilityZones:
      description: A list of Openstack availability zones.
      type: array
      items:
        $ref: '#/components/schemas/openstackAvailabilityZone'
  requestBodies:
    tokenScopeRequest:
      description: Openstack authentication scoping information.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tokenScope'
    applicationCredentialRequest:
      description: Openstack application credential parameters.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/applicationCredentialOptions'
    createControlPlaneRequest:
      description: Unikorn control plane parameters.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createControlPlane'
    createKubernetesClusterRequest:
      description: Unikorn Kubernetes cluster parameters.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/kubernetesCluster'
    nullRequest:
      description: Delete me
      content: {}
  responses:
    nullResponse:
      description: Delete Me
      content:
        application/json:
          schema:
            type: object
    okResponse:
      description: Request is ok with no body.
    acceptedResponse:
      description: Creation request accepted.
    badRequestResponse:
      description: Request body failed schema validation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/oauth2Error'
    unauthorizedResponse:
      description: Authentication failed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/oauth2Error'
    notFoundResponse:
      description: Unable to find a resource.
    conflictResponse:
      description: Resource conlicts with another.
    internalServerErrorResponse:
      description: An unexpected error occurred, please report.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/oauth2Error'
    tokenResponse:
      description: Authentication was successful.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/token'
    projectResponse:
      description: A Unikorn project.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/project'
    controlPlaneResponse:
      description: A Unikorn control plane.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/controlPlane'
    controlPlanesResponse:
      description: A list of Unikorn control planes.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/controlPlanes'
    kubernetesClusterResponse:
      description: A Unikorn Kubernetes cluster.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/kubernetesCluster'
    kubernetesClustersResponse:
      description: A list of Unikorn Kubernetes clusters.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/kubernetesClusters'
    openstackProjectsResponse:
      description: A list of Openstack projects.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/openstackProjects'
    openstackApplicationCredentialResponse:
      description: An Openstack application credential.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/openstackApplicationCredential'
    openstackImagesResponse:
      description: A list of Openstack images that are compatible with this platform.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/openstackImages'
    openstackFlavorsResponse:
      description: A list of Openstack flavors.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/openstackFlavors'
    openstackExternalNetworksResponse:
      description: A list of Openstack external networks.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/openstackExternalNetworks'
    openstackKeyPairsResponse:
      description: A list of Openstack key pairs.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/openstackKeyPairs'
    openstackComputeAvailabilityZonesResponse:
      description: A list of Openstack availability zones.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/openstackAvailabilityZones'
    openstackBlockStorageAvailabilityZonesResponse:
      description: A list of Openstack availability zones.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/openstackAvailabilityZones'
  securitySchemes:
    httpBasicAuthentication:
      description: Operation requires HTTP basic authentication.
      type: http
      scheme: basic
    oauth2Authentication:
      description: Operation requires OAuth2 bearer token authentication.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://kubernetes.eschercloud.com/api/v1/tokens/password"
          tokenURL: https://kubernetes.eschercloud.com/api/v1/tokens/token"
          scopes:
            project: Token is scoped to an OpenStack project
