openapi: 3.0.3
info:
  title: Unikorn Server
  description: RESTful API service for Unikorn custom resources and UI.
  version: 0.2.0
paths:
  /api/v1/auth/tokens/password:
    description: Password based authentication services.
    post:
      x-no-body: true
      description: |-
        Authenticates against Openstack, and returns a signed and encrypted oauth2
        JWT.  This token has a claim that contains the Openstack authorization token.
        This token can be used to poll allowed Openstack projects and upgrade to a
        project scoped token.
      security:
      - httpBasicAuthentication: []
      responses:
        '200':
          $ref: '#/components/responses/tokenResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
  /api/v1/auth/tokens/token:
    description: Token based authentication services.
    post:
      description: |-
        Authenticates against OpenStack, and returns a signed and encrypted oauth2
        JWT.  This token has a claim that contains the Openstack authorization token.
        The Openstack authorization token is project scoped, so the JWT is granted
        the "project" scope, allowing more APIs to be accessed.
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/tokenScopeRequest'
      responses:
        '200':
          $ref: '#/components/responses/tokenResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
  /api/v1/projects:
    description: Unikorn project services.
    get:
      description: |-
        Lists all Unikorn projects associated with the authenticated user's
        OpenStack project.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/nullResponse'
    post:
      description: |-
        Creates a new Unikorn project associated with the authenticated user's
        OpenStack project.
      security:
      - oauth2Authentication:
        - project
      requestBody:
        $ref: "#/components/requestBodies/nullRequest"
      responses:
        '200':
          $ref: '#/components/responses/nullResponse'
  /api/v1/projects/{project}:
    description: Unikorn project services.
    parameters:
    - $ref: '#/components/parameters/project'
    get:
      description: |-
        Gets a Unikorn project associated with the authenticated user's
        OpenStack project.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/nullResponse'
    delete:
      description: |-
        Deletes a Unikorn project associated with the authenticated user's
        OpenStack project.  This is a cascading operation and will delete all
        contained control planes and clusters.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/nullResponse'
  /api/v1/projects/{project}/controlplanes:
    description: Unikorn control plane services.
    parameters:
    - $ref: '#/components/parameters/project'
    get:
      description: |-
        Lists all Unikorn control planes contained within the selected Unikorn
        project.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/nullResponse'
    post:
      description: |-
        Creates a new Unikorn control plane within the selected Unikorn project.
      security:
      - oauth2Authentication:
        - project
      requestBody:
        $ref: "#/components/requestBodies/nullRequest"
      responses:
        '200':
          $ref: '#/components/responses/nullResponse'
  /api/v1/projects/{project}/controlplanes/{controlPlane}:
    description: Unikorn control plane services.
    parameters:
    - $ref: '#/components/parameters/project'
    - $ref: '#/components/parameters/controlPlane'
    get:
      description: |-
        Gets a Unikorn control plane from within the selected Unikorn project.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/nullResponse'
    put:
      description: |-
        Updates a Unikorn control plane within the selected Unikorn project.
        This is typically used to modify software versions managed by the
        underlying continuous delivery platform.
      security:
      - oauth2Authentication:
        - project
      requestBody:
        $ref: "#/components/requestBodies/nullRequest"
      responses:
        '200':
          $ref: '#/components/responses/nullResponse'
    delete:
      description: |-
        Deletes a Unikorn control plane from within the selected Unikorn project.
        This is a cascading operation and will delete all contained clusters.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/nullResponse'
  /api/v1/projects/{project}/controlplanes/{controlPlane}/clusters:
    description: Unikorn cluster services.
    parameters:
    - $ref: '#/components/parameters/project'
    - $ref: '#/components/parameters/controlPlane'
    get:
      description: |-
        List all Unikorn clusters within the selected Unikorn control plane.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/nullResponse'
    post:
      description: |-
        Create a new Unikorn cluster within the selected Unikorn control plane.
      security:
      - oauth2Authentication:
        - project
      requestBody:
        $ref: "#/components/requestBodies/nullRequest"
      responses:
        '200':
          $ref: '#/components/responses/nullResponse'
  /api/v1/projects/{project}/controlplanes/{controlPlane}/clusters/{cluster}:
    description: Unikorn cluster services.
    parameters:
    - $ref: '#/components/parameters/project'
    - $ref: '#/components/parameters/controlPlane'
    - $ref: '#/components/parameters/cluster'
    get:
      description: |-
        Get a Unikorn cluster from within the selected Unikorn control plane.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/nullResponse'
    put:
      description: |-
        Update a Unikorn cluster within the selected Unikorn control plane.
        This is used to modify cluster paramters e.g. Kubernetes versions or
        scaling (where automatic scaling is not employed), and to modify any
        software componenets deployed within the cluster by the underlying
        continuous deliver platform.
      security:
      - oauth2Authentication:
        - project
      requestBody:
        $ref: "#/components/requestBodies/nullRequest"
      responses:
        '200':
          $ref: '#/components/responses/nullResponse'
    delete:
      description: |-
        Delete a Unikorn cluster from within a Unikorn control plane.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/nullResponse'
  /api/v1/providers/openstack/projects:
    description: OpenStack identity project services.
    get:
      description: |-
        Lists all OpenStack projects that the authenticated user is a member of.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/openstackProjectsResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
  /api/v1/providers/openstack/flavors:
    description: OpenStack compute flavor services.
    get:
      description: |-
        Lists all OpenStack compute flavors that the authenticated user has access
        to within the scope of the OpenStack project.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/openstackFlavorsResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
  /api/v1/providers/openstack/images:
    description: OpenStack compute image services.
    get:
      description: |-
        Lists all OpenStack compute images that the authenticated user has access
        to within the scope of the OpenStack project.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/openstackImagesResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
  /api/v1/providers/openstack/availability-zones/compute:
    description: OpenStack compute availability zone services.
    get:
      description: |-
        Lists all OpenStack compute availability zones the authenticated user has
        access to within the scope of the OpenStack project.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/openstackComputeAvailabilityZonesResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
  /api/v1/providers/openstack/availability-zones/block-storage:
    description: OpenStack block storage availability zone services.
    get:
      description: |-
        Lists all OpenStack volume availability zones the authenticated user has
        access to within the scope of the OpenStack project.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/openstackBlockStorageAvailabilityZonesResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
  /api/v1/providers/openstack/external-networks:
    description: OpenStack external network services.
    get:
      description: |-
        Lists all OpenStack external networks the authenticated user has access to
        within the scope of the OpenStack project.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/openstackExternalNetworksResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
  /api/v1/providers/openstack/key-pairs:
    description: OpenStack key pair services.
    get:
      description: |-
        Lists all OpenStack key pairs the authenticated user has access to within
        the scope of the OpenStack project.
      security:
      - oauth2Authentication:
        - project
      responses:
        '200':
          $ref: '#/components/responses/openstackKeyPairsResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
components:
  parameters:
    project:
      name: project
      in: path
      description: The Unikorn project name.
      required: true
      schema:
        $ref: '#/components/schemas/stringParameter'
    controlPlane:
      name: controlPlane
      in: path
      description: The Unikorn control plane name.
      required: true
      schema:
        $ref: '#/components/schemas/stringParameter'
    cluster:
      name: cluster
      in: path
      description: The Unikorn cluster name.
      required: true
      schema:
        $ref: '#/components/schemas/stringParameter'
  schemas:
    stringParameter:
      description: A basic string parameter.
      type: string
    oauth2Error:
      description: Generic error message.
      type: object
      required:
      - error
      - error_description
      properties:
        error:
          description: A terse error string expaning on the HTTP error code.
          type: string
          enum:
          # Defined by OAuth2
          - invalid_request
          - unauthorized_client
          - access_denied
          - unsupported_response_type
          - invalid_scope
          - server_error
          - temporarily_unavailable
          # Proprietary
          - not_found
          - method_not_allowed
          - unsupported_media_type
        error_description:
          description: Verbose message describing the error.
          type: string
    tokenScope:
      description: Password authentication scope.
      type: object
      required:
      - project
      properties:
        project:
          description: Openstack project scoping.
          type: object
          required:
          - id
          properties:
            id:
              description: Openstack project ID.
              type: string
          additionalProperties: false
    token:
      desctiption: Authentication token result.
      type: object
      required:
      - token
      properties:
        token:
          description: Authentication token.
          type: string
    openstackProject:
      description: An Openstack project.
      type: object
      required:
      - id
      - name
      properties:
        id:
          description: Globally unique project ID.
          type: string
        name:
          description: The name of the project within the scope of the domain.
          type: string
        description:
          description: A verbose description of the project.
          type: string
    openstackProjects:
      description: A list of Openstack projects.
      type: array
      items:
        $ref: '#/components/schemas/openstackProject'
    openstackImage:
      description: And Openstack image.
      type: object
      required:
      - id
      - name
      - created
      - modified
      - versions
      properties:
        id:
          description: The unique image ID.
          type: string
        name:
          description: The image name.
          type: string
        created:
          description: Time when the image was created.
          type: string
          format: date-time
        modified:
          description: Time when the image was last modified.
          type: string
          format: date-time
        versions:
          description: Image version metadata.
          type: object
          required:
          - kubernetes
          - nvidia_driver
          properties:
            kubernetes:
              description: The kubernetes semantic version.
              type: string
            nvidia_driver:
              description: The nvidia driver version.
              type: string
    openstackImages:
      description: A list of Openstack images that are compatible with this platform.
      type: array
      items:
        $ref: '#/components/schemas/openstackImage'
    openstackFlavor:
      description: An Openstack flavor.
      type: object
      required:
      - id
      - name
      - cpus
      - memory
      properties:
        id:
          description: The unique flavor ID.
          type: string
        name:
          description: The flavor name.
          type: string
        cpus:
          descritpion: The number of CPUs.
          type: integer
        memory:
          description: The amount of memory in GiB.
          type: integer
        gpus:
          description: The number of GPUs, if not set there are none.
          type: integer
    openstackFlavors:
      description: A list of Openstack flavors.
      type: array
      items:
        $ref: '#/components/schemas/openstackFlavor'
    openstackExternalNetwork:
      description: An Openstack external network.
      type: object
      required:
      - id
      - name
      properties:
        id:
          description: Openstack external network ID.
          type: string
        name:
          description: Opestack external network name.
          type: string
    openstackExternalNetworks:
      description: A list of Openstack external networks.
      type: array
      items:
        $ref: '#/components/schemas/openstackExternalNetwork'
    openstackKeyPair:
      description: An Openstack key pair.
      type: object
      required:
      - name
      properties:
        name:
          description: The key pair name.
          type: string
    openstackKeyPairs:
      description: A list of Openstack key pairs.
      type: array
      items:
        $ref: '#/components/schemas/openstackKeyPair'
    openstackAvailabilityZone:
      description: An Openstack availability zone.
      type: object
      required:
      - name
      properties:
        name:
          description: The availability zone name.
          type: string
    openstackAvailabilityZones:
      description: A list of Openstack availability zones.
      type: array
      items:
        $ref: '#/components/schemas/openstackAvailabilityZone'
  requestBodies:
    tokenScopeRequest:
      description: Openstack authentication scoping information.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tokenScope'
    nullRequest:
      description: Delete me
      content: {}
  responses:
    nullResponse:
      description: Delete Me
      content:
        application/json:
          schema:
            type: object
    badRequestResponse:
      description: Request body failed schema validation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/oauth2Error'
    unauthorizedResponse:
      description: Authentication failed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/oauth2Error'
    unsupportedMediaTypeResponse:
      description: Requested media type unspecified or unsupported.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/oauth2Error'
    internalServerErrorResponse:
      description: An unexpected error occurred, please report.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/oauth2Error'
    tokenResponse:
      description: Authentication was successful.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/token'
    openstackProjectsResponse:
      description: A list of Openstack projects.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/openstackProjects'
    openstackImagesResponse:
      description: A list of Openstack images that are compatible with this platform.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/openstackImages'
    openstackFlavorsResponse:
      description: A list of Openstack flavors.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/openstackFlavors'
    openstackExternalNetworksResponse:
      description: A list of Openstack external networks.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/openstackExternalNetworks'
    openstackKeyPairsResponse:
      description: A list of Openstack key pairs.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/openstackKeyPairs'
    openstackComputeAvailabilityZonesResponse:
      description: A list of Openstack availability zones.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/openstackAvailabilityZones'
    openstackBlockStorageAvailabilityZonesResponse:
      description: A list of Openstack availability zones.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/openstackAvailabilityZones'
  securitySchemes:
    httpBasicAuthentication:
      description: Operation requires HTTP basic authentication.
      type: http
      scheme: basic
    oauth2Authentication:
      description: Operation requires OAuth2 bearer token authentication.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://kubernetes.eschercloud.com/api/v1/tokens/password"
          tokenURL: https://kubernetes.eschercloud.com/api/v1/tokens/token"
          scopes:
            project: Token is scoped to an OpenStack project
