// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/cd/argocd/interfaces.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	api "k8s.io/client-go/tools/clientcmd/api"
)

// MockClient is a mock of Client interface.
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient.
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance.
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// DeleteCluster mocks base method.
func (m *MockClient) DeleteCluster(ctx context.Context, name string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCluster", ctx, name)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCluster indicates an expected call of DeleteCluster.
func (mr *MockClientMockRecorder) DeleteCluster(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCluster", reflect.TypeOf((*MockClient)(nil).DeleteCluster), ctx, name)
}

// UpsertCluster mocks base method.
func (m *MockClient) UpsertCluster(ctx context.Context, name, server string, config *api.Config) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpsertCluster", ctx, name, server, config)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpsertCluster indicates an expected call of UpsertCluster.
func (mr *MockClientMockRecorder) UpsertCluster(ctx, name, server, config interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpsertCluster", reflect.TypeOf((*MockClient)(nil).UpsertCluster), ctx, name, server, config)
}
